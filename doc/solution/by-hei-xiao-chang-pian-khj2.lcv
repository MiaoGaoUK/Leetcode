### 解题思路

这里首先判断递归的base case。当节点本身为NULL时，则函数返回0。

这里我们需要做的就是分别去递归左右节点，一直到找到各个支路的尽头，然后返回，每次返回时记得算上自身节点。

### 代码

* cpp

```cpp
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int countNodes(TreeNode* root) {
        if(root == NULL){
            return  0;
        }
        return countNodes(root->left) + countNodes(root->right) + 1;
    }
};
```

