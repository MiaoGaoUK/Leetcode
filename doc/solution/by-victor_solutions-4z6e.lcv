1.构造前缀和矩阵sumMatrix，令其行列数均比matrix大1。
2.通过两个for循环，计算sumMatrix的每一个元素（从sumMatrix[1][1]开始）。
3.使用sumMatrix，进行时间复杂度为O(1)的加减法运算，算出matrix子矩阵元素的总和（注意最后需加上多减掉的部分）。

* 

```
class NumMatrix {
    private int[][] sumMatrix;

    public NumMatrix(int[][] matrix) {
        int m = matrix.length, n = matrix[0].length;
        sumMatrix = new int[m + 1][n + 1];
        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <=n; j++) {
                sumMatrix[i][j] = sumMatrix[i-1][j] + sumMatrix[i][j - 1] 
                + matrix[i - 1][j - 1] - sumMatrix[i - 1][j - 1];
            }
        }
    }
    
    public int sumRegion(int row1, int col1, int row2, int col2) {
        return sumMatrix[row2 + 1][col2 + 1] - sumMatrix[row2 + 1][col1] - 
        sumMatrix[row1][col2 + 1] + sumMatrix[row1][col1];
    }
}
```

