差分，差分数组的前缀和即为原数组
可以根据预定数组得到差分数组，然后对差分数组求前缀和以得到目标数组
求差分数组，对于记录[l, r, inc]，让d[l - 1] + inc，让d[r] - inc，当r为n时不修改d

* []

```c++
class Solution {
public:
    vector<int> corpFlightBookings(vector<vector<int>>& bookings, int n) {
        vector<int> d(n, 0);
        for(int i = 0; i < bookings.size(); i ++)
        {
            d[bookings[i][0] - 1] += bookings[i][2];
            if(bookings[i][1] < n)  
                d[bookings[i][1]] -= bookings[i][2];
        }

        for(int i = 1; i < d.size(); i ++)
            d[i] += d[i - 1];
        return d;
    }
};
```

* []

```python
class Solution:
    def corpFlightBookings(self, bookings: List[List[int]], n: int) -> List[int]:
        d = [0 for _ in range(n)]
        for i in range(len(bookings)):
            d[bookings[i][0] - 1] += bookings[i][2]
            if bookings[i][1] < n:
                d[bookings[i][1]] -= bookings[i][2]

        for i in range(1, n):
            d[i] += d[i - 1]
        
        return d
```

* []

```java
class Solution {
    public int[] corpFlightBookings(int[][] bookings, int n) {
        int[] d = new int[n];
        for(int i = 0; i < bookings.length; i ++)
        {
            d[bookings[i][0] - 1] +=  bookings[i][2];
            if(bookings[i][1] < n)
                d[bookings[i][1]] -= bookings[i][2];
        }

        for(int i = 1; i < n; i ++)
            d[i] += d[i - 1];

        return d;
    }
}
```

